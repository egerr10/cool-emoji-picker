(function(t){function e(e){for(var i,r,s=e[0],c=e[1],l=e[2],m=0,p=[];m<s.length;m++)r=s[m],Object.prototype.hasOwnProperty.call(a,r)&&a[r]&&p.push(a[r][0]),a[r]=0;for(i in c)Object.prototype.hasOwnProperty.call(c,i)&&(t[i]=c[i]);d&&d(e);while(p.length)p.shift()();return n.push.apply(n,l||[]),o()}function o(){for(var t,e=0;e<n.length;e++){for(var o=n[e],i=!0,s=1;s<o.length;s++){var c=o[s];0!==a[c]&&(i=!1)}i&&(n.splice(e--,1),t=r(r.s=o[0]))}return t}var i={},a={app:0},n=[];function r(e){if(i[e])return i[e].exports;var o=i[e]={i:e,l:!1,exports:{}};return t[e].call(o.exports,o,o.exports,r),o.l=!0,o.exports}r.m=t,r.c=i,r.d=function(t,e,o){r.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:o})},r.r=function(t){"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},r.t=function(t,e){if(1&e&&(t=r(t)),8&e)return t;if(4&e&&"object"===typeof t&&t&&t.__esModule)return t;var o=Object.create(null);if(r.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var i in t)r.d(o,i,function(e){return t[e]}.bind(null,i));return o},r.n=function(t){var e=t&&t.__esModule?function(){return t["default"]}:function(){return t};return r.d(e,"a",e),e},r.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},r.p="/cool-emoji-picker/";var s=window["webpackJsonp"]=window["webpackJsonp"]||[],c=s.push.bind(s);s.push=e,s=s.slice();for(var l=0;l<s.length;l++)e(s[l]);var d=c;n.push([0,"chunk-vendors"]),o()})({0:function(t,e,o){t.exports=o("56d7")},"316c":function(t,e,o){e=t.exports=o("2350")(!1),e.push([t.i,"@import url(https://fonts.googleapis.com/css?family=Lato:400,300,300italic,400italic,700,700italic);",""]),e.push([t.i,'body,html{height:100%;width:100%;margin:0;padding:0;left:0;top:0;font-size:100%}.center,.container{margin-left:auto;margin-right:auto}*{font-family:Lato,Helvetica,sans-serif;color:#333447;line-height:1.5}h1{font-size:2.5rem}h2{font-size:2rem}h3{font-size:1.375rem}h4{font-size:1.125rem}h5{font-size:1rem}h6{font-size:.875rem}p{font-size:1.125rem;font-weight:200;line-height:1.8}.font-light{font-weight:300}.font-regular{font-weight:400}.font-heavy{font-weight:700}.left{text-align:left}.right{text-align:right}.center{text-align:center}.justify{text-align:justify}.container{width:90%}.row{position:relative;width:100%}.row [class^=col]{float:left;margin:.5rem 2%;min-height:.125rem}.col-1,.col-2,.col-3,.col-4,.col-5,.col-6,.col-7,.col-8,.col-9,.col-10,.col-11,.col-12{width:96%}.col-1-sm{width:4.33%}.col-2-sm{width:12.66%}.col-3-sm{width:21%}.col-4-sm{width:29.33%}.col-5-sm{width:37.66%}.col-6-sm{width:46%}.col-7-sm{width:54.33%}.col-8-sm{width:62.66%}.col-9-sm{width:71%}.col-10-sm{width:79.33%}.col-11-sm{width:87.66%}.col-12-sm{width:96%}.row:after{content:"";display:table;clear:both}.hidden-sm{display:none}@media only screen and (min-width:33.75em){.container{width:80%}}@media only screen and (min-width:45em){.col-1{width:4.33%}.col-2{width:12.66%}.col-3{width:21%}.col-4{width:29.33%}.col-5{width:37.66%}.col-6{width:46%}.col-7{width:54.33%}.col-8{width:62.66%}.col-9{width:71%}.col-10{width:79.33%}.col-11{width:87.66%}.col-12{width:96%}.hidden-sm{display:block}}@media only screen and (min-width:60em){.container{width:75%;max-width:60rem}}',""])},"4cea":function(t,e,o){"use strict";var i=o("4d2c"),a=o.n(i);a.a},"4d2c":function(t,e,o){var i=o("a998");"string"===typeof i&&(i=[[t.i,i,""]]),i.locals&&(t.exports=i.locals);var a=o("499e").default;a("88da2af0",i,!0,{sourceMap:!1,shadowMode:!1})},"56d7":function(t,e,o){"use strict";o.r(e);o("cadf"),o("551c"),o("f751"),o("097d");var i=o("a026"),a=function(){var t=this,e=t.$createElement,o=t._self._c||e;return o("div",{staticClass:"roboto-font",attrs:{id:"app"}},[o("slide",{staticClass:"slide-fixed",attrs:{noOverlay:"",isOpen:t.isSlideOpen}},[o("a",{staticClass:"doc-index-lvl1",attrs:{href:"#home"}},[t._v("Cool Emoji Picker")]),o("a",{staticClass:"doc-index-lvl2",attrs:{href:"#requirements"}},[t._v("Requirements")]),o("a",{staticClass:"doc-index-lvl2",attrs:{href:"#getting-started"}},[t._v("Getting Started")]),o("a",{staticClass:"doc-index-lvl2",attrs:{href:"#coolpicker-docs"}},[t._v("CoolPicker Docs")]),o("a",{staticClass:"doc-index-lvl2",attrs:{href:"#cooltextarea-docs"}},[t._v("CoolTextArea Docs")]),o("a",{staticClass:"doc-index-lvl2",attrs:{href:"#emoji-data-index"}},[t._v("Emoji Data Index")]),o("a",{staticClass:"doc-index-lvl2",attrs:{href:"#emoji-langs"}},[t._v("Emoji Langs")]),o("a",{staticClass:"doc-index-lvl2",attrs:{href:"#credits"}},[t._v("Credits")]),o("a",{staticClass:"doc-index-lvl2",attrs:{href:"#roadmap"}},[t._v("Roadmap")])]),o("div",{staticClass:"app container"},[t._m(0),t._m(1),o("div",{staticClass:"container border-bottom"}),o("div",{staticClass:"text-center container margin-top margin-bottom"},[o("strong",[t._v("CoolPicker")]),t._v(" is meant to be a plug-n-play emoji picker only. It emit some events like @emojiUnicodeAdded (check component docs for more info)\n            so you can catch the selected emoji selected and perform some action.\n\n            "),o("coolpicker",{staticClass:"bg-cream margin-bottom margin-top b-rounded",attrs:{emojiData:t.emojiDataAll,emojiGroups:t.emojiGroups,skinsSelection:!1,searchEmojisFeat:!0,appendToBody:!0,searchEmojiPlaceholder:"Search here.",searchEmojiNotFound:"Emojis not found."}})],1),o("div",{staticClass:"container border-bottom"}),o("div",{staticClass:"text-center container margin-top margin-bottom"},[o("strong",[t._v("CoolTextArea")]),t._v(" is meant to be a plug-n-play emoji picker + textarea which provides string \n            sanitization for HTML tags and emoji support.\n\n            "),o("cooltextarea",{ref:"cooltextareaSend",staticClass:"margin-top text-justify",attrs:{content:t.content,emojiData:t.emojiDataAll,emojiGroups:t.emojiGroups,skinsSelection:!0,enableSendBtn:!0,recentEmojisFeat:!0,recentEmojisStorage:"none",searchEmojisFeat:!0,appendToBody:!0},on:{"update:content":function(e){t.content=e},enterKey:t.onEnterKey}}),o("div",{staticClass:"text-center margin-bottom"},[t._v("\n                Tip: You can send any message above to try the component!\n            ")]),t._m(2),o("div",{staticClass:"container border-bottom"}),o("div",{staticClass:"row margin-top header2"},[t._v("\n                CoolTextArea presents the emojis in their Twemoji IMG:\n            ")]),t._m(3),o("div",{staticClass:"row margin-top header2"},[t._v("\n                And outputs with sanitization (emoji IMG conversion to unicode):\n            ")]),o("div",{staticClass:"row code-block margin-top"},[t._v("\n                <strong>This is a CoolTextArea</strong> \\n ðŸ˜„ \\n indeed!\n            ")])],1),o("div",{staticClass:"container border-bottom"}),t._m(4),o("div",{staticClass:"header2 container margin-top"},[t._v("One Emoji Group - Forest Color")]),o("cooltextarea",{staticClass:"margin-top container",attrs:{content:t.content,emojiData:t.emojiDataOneCollection,emojiGroups:t.emojiGroups,componentColor:"forest",searchEmojisFeat:!0}}),o("div",{staticClass:"header2 container margin-top"},[t._v("Two Emoji Groups - Cherry Color")]),o("cooltextarea",{staticClass:"margin-top container",attrs:{content:t.content,emojiData:t.emojiDataTwoCollections,emojiGroups:t.emojiGroups,componentColor:"cherry",searchEmojisFeat:!0}}),o("div",{staticClass:"header2 container margin-top"},[t._v("Three Emoji Groups - Ocean Color")]),o("cooltextarea",{staticClass:"margin-top container",attrs:{content:t.content,emojiData:t.emojiDataThreeCollections,emojiGroups:t.emojiGroups,componentColor:"ocean",searchEmojisFeat:!0}}),o("div",{staticClass:"header2 container margin-top"},[t._v("Four Emoji Groups - Sun Color")]),o("cooltextarea",{staticClass:"margin-top container",attrs:{content:t.content,emojiData:t.emojiDataFourCollections,emojiGroups:t.emojiGroups,componentColor:"sun",searchEmojisFeat:!0}}),o("div",{staticClass:"header2 container margin-top"},[t._v("All Emoji Groups - Transparent")]),o("cooltextarea",{staticClass:"margin-top container",attrs:{content:t.content,emojiData:t.emojiDataAll,emojiGroups:t.emojiGroups,componentColor:"transparent",searchEmojisFeat:!0}}),o("div",{staticClass:"header1 row margin-top margin-bottom",attrs:{id:"requirements"}},[t._v("\n            Requirements:\n        ")]),o("div",{staticClass:"container margin-bottom"},[t._v("- Cool Emoji Picker is made with Vue, for Vue (for the time being).")]),t._m(5),t._m(6),t._m(7),o("div",{staticClass:"header1 row margin-top margin-bottom",attrs:{id:"getting-started"}},[t._v("\n            Getting Started\n        ")]),t._m(8),o("div",{staticClass:"header1  row margin-top margin-bottom",attrs:{id:"coolpicker-docs"}},[t._v("\n            CoolPicker Docs\n        ")]),o("div",{staticClass:"header2 text-center row margin-top margin-bottom"},[t._v("\n            CoolPicker - Component Attributes\n        ")]),t._m(9),o("div",{staticClass:"header2 text-center row margin-top margin-bottom"},[t._v("\n            CoolPicker - Component Events\n        ")]),t._m(10),o("div",{staticClass:"header1 row margin-top margin-bottom",attrs:{id:"cooltextarea-docs"}},[t._v("\n            CoolTextArea Docs\n        ")]),o("div",{staticClass:"header2 text-center row margin-top margin-bottom"},[t._v("\n            CoolTextArea - Component Attributes\n        ")]),t._m(11),o("div",{staticClass:"header2 text-center row margin-top margin-bottom"},[t._v("\n            CoolTextArea - Component Events\n        ")]),t._m(12),o("div",{staticClass:"header2 text-center  row margin-top margin-bottom",attrs:{id:"component-useful-methods"}},[t._v("\n            CoolTextArea - Useful Methods\n        ")]),t._m(13),t._m(14),o("div",{staticClass:"header1 row margin-top margin-bottom",attrs:{id:"emoji-data-index"}},[t._v("\n            Emoji Data Index\n        ")]),o("div",{staticClass:"container margin-top"},[t._v("\n            PS: If you are using cool-emoji-picker in a version below 4.0.0 the path for emoji-data is 'cool-emoji-picker/src/emoji-data', \n            otherwise it will be 'cool-emoji-picker/emoji-data'.\n        ")]),o("div",{staticClass:"container"},[t._v("\n            As seen in the example you will need, for the emoji picker to work, \n            to import an indexed list of emojis and emoji groups name (which is provided by this lib) and pass as a prop of the CoolTextArea/CoolPicker component.\n            There is already different bundles so you are able to choose if you want your emoji picker to have all emojis or only smileys, or only smileys and objects, etc.\n        ")]),t._m(15),t._m(16),o("div",{staticClass:"container"},[t._v("\n            PS: You can provide your own emoji.json index file with a list of emoji Unicodes, \n            but you will need to follow the structure of the bundles generated by this library (like cool-emoji-picker/emoji-data/{LANG}/emoji-all-groups.json).\n        ")]),o("div",{staticClass:"container"},[t._v("\n            PS: You can provide your own emoji-groups.json index file with a list of emoji groups name, \n            but you will need to follow the structure of the bundle generated by this library (cool-emoji-picker/emoji-data/emoji-groups.json).\n        ")]),o("div",{staticClass:"header1 row margin-top margin-bottom",attrs:{id:"emoji-langs"}},[t._v("\n            Emoji Langs\n        ")]),o("div",{staticClass:"container"},[t._v("\n            The emoji bundles comes with 19 emoji bundles for 19 different languages. Below is the list of available languages:\n        ")]),t._m(17),o("div",{staticClass:"header1 row margin-top margin-bottom",attrs:{id:"credits"}},[t._v("\n            Credits\n        ")]),t._m(18),t._m(19),o("div",{staticClass:"container margin-bottom"},[t._v("\n            - Also thanks to VueTooltip (by extension, PopperJS) which is other lib used in this component.\n        ")]),o("div",{staticClass:"header1 row margin-top margin-bottom",attrs:{id:"roadmap"}},[t._v("\n            Roadmap\n        ")]),o("div",{staticClass:"container margin-bottom"},[t._v("\n            - Divide emoji index bundle in two bundles: one with skin tones and the other without.\n        ")]),o("div",{staticClass:"container margin-bottom"},[t._v("\n            - Feature: option for user to choose send method (Enter or Shift + Enter)\n        ")]),o("div",{staticClass:"container margin-bottom"},[t._v("\n            - Show a loading icon while IMG tags are loading in Emoji picker\n        ")]),o("div",{staticClass:"container margin-bottom"},[t._v("\n            - Validator for emojiData and emojiGroups structures; and for twemojiPath prop\n        ")]),o("div",{staticClass:"container margin-bottom"},[t._v("\n            - Component size optimization\n        ")]),o("div",{staticClass:"container margin-bottom"},[t._v("\n            - Support for React, Angular, Ember\n        ")]),t._m(20)],1)],1)},n=[function(){var t=this,e=t.$createElement,o=t._self._c||e;return o("div",{staticClass:"header1 margin-header",attrs:{id:"home"}},[o("span",[t._v("Cool Emoji Picker")])])},function(){var t=this,e=t.$createElement,o=t._self._c||e;return o("div",{staticClass:"text-center container margin-top margin-bottom"},[o("div",{staticClass:"row"},[o("strong",[t._v("Cool Emoji Picker")]),t._v(" was created to be a developer-friendly library for anyone who \n                wants to add emojis support in their Vue app using the Twemoji (Twitter) arts. It comes with two components:\n            ")]),o("div",{staticClass:"row"},[o("strong",[t._v("CoolPicker")]),t._v(" and "),o("strong",[t._v("CoolTextArea")]),t._v(".\n            ")])])},function(){var t=this,e=t.$createElement,o=t._self._c||e;return o("div",{attrs:{id:"messages-sent"}},[o("div",{staticClass:"header2"},[t._v("Messages Sent (max. 5):")]),o("div",{staticClass:"code-block-cream text-wrap margin-bottom padding-all"},[t._v(" Send your message here! "),o("img",{staticClass:"emoji",attrs:{draggable:"false",alt:"ðŸ˜€",src:"https://twemoji.maxcdn.com/2/72x72/1f600.png"}}),o("img",{staticClass:"emoji",attrs:{draggable:"false",alt:"ðŸ¤”",src:"https://twemoji.maxcdn.com/2/72x72/1f914.png"}})])])},function(){var t=this,e=t.$createElement,o=t._self._c||e;return o("div",{staticClass:"row code-block-cream margin-top"},[t._v("\n                <strong>This is a CoolTextArea</strong>\n                "),o("br"),o("img",{staticClass:"emoji",attrs:{draggable:"false",alt:"ðŸ˜„",src:"https://twemoji.maxcdn.com/2/72x72/1f604.png"}}),o("br"),t._v("\n                indeed!\n            ")])},function(){var t=this,e=t.$createElement,o=t._self._c||e;return o("div",{staticClass:"text-center container margin-top margin-bottom"},[o("strong",[t._v("Cool Emoji Picker")]),t._v(" emoji picker uses \n            "),o("a",{attrs:{href:"http://www.unicode.org/emoji/charts-12.0/"}},[t._v("Emoji Unicode 12")]),t._v(" \n            (latest emoji spec, from 2019, which includes skins [tones, hair and diversity]) as its base, \n            and apply some trimming on the emoji list for better optimization of component size. \n            Also, for the sake of your bundle size, you can opt if you want all \n            emoji groups, or only smileys, or even only smileys and foods! The choice is yours!\n        ")])},function(){var t=this,e=t.$createElement,o=t._self._c||e;return o("div",{staticClass:"container margin-bottom"},[t._v("\n            - For CoolPicker component search feature to work your browser needs to support \n            "),o("a",{attrs:{href:"https://caniuse.com/#feat=es6-string-includes"}},[t._v("String Includes")]),t._v(".\n        ")])},function(){var t=this,e=t.$createElement,o=t._self._c||e;return o("div",{staticClass:"container margin-bottom"},[t._v("\n            - For CoolTextArea component layouting proportions correctly \n            render your browser needs to support "),o("a",{attrs:{href:"https://caniuse.com/#feat=flexbox"}},[t._v("CSS Flexbox")]),t._v(".\n        ")])},function(){var t=this,e=t.$createElement,o=t._self._c||e;return o("div",{staticClass:"container margin-bottom"},[t._v("\n            - In most cases "),o("a",{attrs:{href:"https://polyfill.io/v2/docs/"}},[t._v("Polyfill.io")]),t._v(" can ensure support for older browsers.\n        ")])},function(){var t=this,e=t.$createElement,o=t._self._c||e;return o("div",{staticClass:"row col-12"},[o("strong",{staticClass:"row margin-top"},[t._v("- To install Cool Emoji Picker on your Vue project you can run, for NPM:")]),o("div",{staticClass:"row code-block padding-all margin-bottom"},[t._v("npm install cool-emoji-picker")]),o("strong",{staticClass:"row margin-top"},[t._v("- For Yarn:")]),o("div",{staticClass:"row code-block padding-all margin-bottom"},[t._v("yarn add cool-emoji-picker")]),o("strong",{staticClass:"row margin-top"},[t._v("- To import CoolPicker on your Vue project you can do as follows:")]),o("div",{staticClass:"row code-block padding-all margin-bottom text-wrap text-break"},[t._v('\n                JAVASCRIPT:\n                import { CoolPicker } from \'cool-emoji-picker\';\n                import EmojiData from \'cool-emoji-picker/emoji-data/{LANG}/emoji-all-groups.json\';\n                import EmojiDataAnimalsNature from \'cool-emoji-picker/emoji-data/{LANG}/emoji-group-animals-nature.json\';\n                import EmojiDataFoodDrink from \'cool-emoji-picker/emoji-data/{LANG}/emoji-group-food-drink.json\';\n                import EmojiGroups from \'cool-emoji-picker/emoji-data/emoji-groups.json\';\n    \n                export default {\n                    name: \'App\',\n                    components: { \'coolpicker\': CoolPicker },\n                    computed: {\n                        emojiDataAll() {\n                            return EmojiData;\n                        },\n                        emojiDataTwoCollections() {\n                            const emojiData = [];\n                            emojiData.push(EmojiDataAnimalsNature);\n                            emojiData.push(EmojiDataFoodDrink);\n                            return emojiData;\n                        },\n                        emojiGroups() {\n                            return EmojiGroups;\n                        }\n                    }\n                }\n    \n                TEMPLATE:\n                // Emoji picker component using all emojis\n                <coolpicker\n                    :emojiData="emojiDataAll" \n                    :emojiGroups="emojiGroups" \n                    :skinsSelection="true"\n                    @emojiUnicodeAdded="yourMethodToCatchEmojiUnicode"\n                    @emojiImgAdded="yourMethodToCatchEmojiImg" ></coolpicker>\n\n                // Emoji picker component using only two emoji groups\n                <coolpicker\n                    :emojiData="emojiDataTwoCollections" \n                    :emojiGroups="emojiGroups" \n                    :skinsSelection="true"\n                    @emojiUnicodeAdded="yourMethodToCatchEmojiUnicode"\n                    @emojiImgAdded="yourMethodToCatchEmojiImg" ></coolpicker>\n            ')]),o("strong",{staticClass:"row margin-top"},[t._v("- To import CoolTextArea on your Vue project you can do as follows:")]),o("div",{staticClass:"row code-block padding-all margin-bottom text-wrap text-break"},[t._v("\n                JAVASCRIPT:\n                import { CoolTextArea } from 'cool-emoji-picker';\n                import EmojiData from 'cool-emoji-picker/emoji-data/emoji-all-groups.json';\n                import EmojiGroups from 'cool-emoji-picker/emoji-data/emoji-groups.json';\n    \n                export default {\n                    name: 'App',\n                    components: { 'cooltextarea': CoolTextArea },\n                    computed: {\n                        emojiDataAll() {\n                            return EmojiData;\n                        },\n                        emojiGroups() {\n                            return EmojiGroups;\n                        }\n                    }\n                }\n    \n                TEMPLATE:\n                <cooltextarea\n                    :content.sync=\"content\" \n                    :emojiData=\"emojiDataAll\" \n                    :emojiGroups=\"emojiGroups\"\n                    @enterKey=\"onEnterKey\"\n                    ref=\"cooltextareaRef\"></cooltextarea>\n            ")]),o("div",{staticClass:"row margin-top margin-bottom"},[t._v("\n                These are basic examples for importing Cool Emoji Picker components in a Vue project.\n            ")])])},function(){var t=this,e=t.$createElement,o=t._self._c||e;return o("table",{staticClass:"row col-12 table"},[o("thead",[o("tr",[o("th",[t._v("Attribute")]),o("th",[t._v("Type")]),o("th",[t._v("Valid Values")]),o("th",[t._v("Description")])])]),o("tbody",[o("tr",[o("td",[t._v("disabled")]),o("td",[t._v("Boolean")]),o("td",[t._v("true / false")]),o("td",{staticClass:"table-description"},[t._v("\n                        Disable the emoji-picker.\n                        Default: false.\n                    ")])]),o("tr",[o("td",[t._v("pickerWidth")]),o("td",[t._v("Number")]),o("td",[t._v("Any Number")]),o("td",{staticClass:"table-description"},[t._v("\n                        Define the emoji picker width (in pixels).\n                        Default: '250'.\n                    ")])]),o("tr",[o("td",[t._v("pickerMaxHeight")]),o("td",[t._v("Number")]),o("td",[t._v("Any Number")]),o("td",{staticClass:"table-description"},[t._v("\n                        Define the emoji picker max height (in pixels).\n                        Default: '200'.\n                    ")])]),o("tr",[o("td",[t._v("appendToBody")]),o("td",[t._v("Boolean")]),o("td",[t._v("True / False")]),o("td",{staticClass:"table-description"},[t._v("\n                        Define the emoji picker bind to body if true; or to parent element if false.\n                        Default: false.\n                    ")])]),o("tr",[o("td",[t._v("triggerType")]),o("td",[t._v("Number")]),o("td",[t._v("'click' and 'hover'")]),o("td",{staticClass:"table-description"},[t._v("\n                        Define the emoji picker trigger type.\n                        Default: 'click'.\n                    ")])]),o("tr",[o("td",[t._v("emojiData")]),o("td",[t._v("Array")]),o("td",[t._v("Array with the Specified Structure")]),o("td",{staticClass:"table-description"},[t._v("\n                        This is the array of emojis which is supplied by \n                        this library, like exemplified in Emoji Data Index. \n                        Default: [].\n                    ")])]),o("tr",[o("td",[t._v("emojiGroups")]),o("td",[t._v("Array")]),o("td",[t._v("Array with the Specified Structure")]),o("td",{staticClass:"table-description"},[t._v("\n                        This is the array of emoji groups which is supplied by \n                        this library, like exemplified in Emoji Data Index. Default: [].\n                    ")])]),o("tr",[o("td",[t._v("skinsSelection")]),o("td",[t._v("Boolean")]),o("td",[t._v("true / false")]),o("td",{staticClass:"table-description"},[t._v("\n                        This is a boolean to enable or disable skins selection in the emoji picker. Default: false.\n                    ")])]),o("tr",[o("td",[t._v("recentEmojisFeat")]),o("td",[t._v("Boolean")]),o("td",[t._v("true / false")]),o("td",{staticClass:"table-description"},[t._v("\n                        This is a boolean to enable or disable \n                        recent emojis feature in the emoji picker. Default: false.\n                    ")])]),o("tr",[o("td",[t._v("recentEmojisStorage")]),o("td",[t._v("String")]),o("td",[t._v("'local', 'session', 'none'")]),o("td",{staticClass:"table-description"},[t._v("\n                        Sets the type of storage for recent emojis in a browser.\n                        'local': LocalStorage; 'session': SessionStorage; 'none': Disable storage. \n                        Default: 'none'.\n                    ")])]),o("tr",[o("td",[t._v("recentEmojiStorageName")]),o("td",[t._v("String")]),o("td",[t._v("Any String")]),o("td",{staticClass:"table-description"},[t._v("\n                        Sets the name of the browser storage object, if enabled. \n                        Default: 'cep-recent-emojis'.\n                    ")])]),o("tr",[o("td",[t._v("recentEmojiLimit")]),o("td",[t._v("Number")]),o("td",[t._v("Any Number")]),o("td",{staticClass:"table-description"},[t._v("\n                        Sets the maximum amount of recent emojis.\n                        Default: 12.\n                    ")])]),o("tr",[o("td",[t._v("searchEmojisFeat")]),o("td",[t._v("Boolean")]),o("td",[t._v("true / false")]),o("td",{staticClass:"table-description"},[t._v("\n                        This is a boolean to enable or disable \n                        search emojis feature in the emoji picker. Default: false.\n                    ")])]),o("tr",[o("td",[t._v("searchEmojiPlaceholder")]),o("td",[t._v("String")]),o("td",[t._v("Any String")]),o("td",{staticClass:"table-description"},[t._v("\n                        Define the search input placeholder. \n                        Default: 'Search emojis.'.\n                    ")])]),o("tr",[o("td",[t._v("searchEmojiNotFound")]),o("td",[t._v("String")]),o("td",[t._v("Any String")]),o("td",{staticClass:"table-description"},[t._v("\n                        Define the label when there are no emojis found.\n                        Default: 'No emojis found.'.\n                    ")])]),o("tr",[o("td",[t._v("twemojiPath")]),o("td",[t._v("String")]),o("td",[t._v("Any String URL")]),o("td",{staticClass:"table-description"},[t._v("\n                        This is a variable to define where are stored the  \n                        emoji arts static resources. Default: 'https://twemoji.maxcdn.com/2/'.\n                    ")])]),o("tr",[o("td",[t._v("twemojiExtension")]),o("td",[t._v("String")]),o("td",[t._v("'.png', '.svg', '.jpg', '.jpeg', '.ico'")]),o("td",{staticClass:"table-description"},[t._v("\n                        This is a variable to define emoji arts static resources extension. \n                        Note: This property only changes the extension, the filename will always be the codepoint for the emoji Unicode.\n                        Default: '.png'.\n                    ")])]),o("tr",[o("td",[t._v("twemojiFolder")]),o("td",[t._v("String")]),o("td",[t._v("Any String folder name")]),o("td",{staticClass:"table-description"},[t._v("\n                        This is a variable to define the folder \n                        where are stored the emoji arts static resources in the 'twemojiPath'.\n                        Default: '72x72'.\n                    ")])])])])},function(){var t=this,e=t.$createElement,o=t._self._c||e;return o("table",{staticClass:"row col-12 table"},[o("thead",[o("tr",[o("th",[t._v("Event")]),o("th",[t._v("Parameter")]),o("th",[t._v("Description")])])]),o("tbody",[o("tr",[o("td",[t._v("emojiUnicodeAdded")]),o("td",[t._v("emojiUnicode")]),o("td",{staticClass:"table-description"},[t._v("\n                        This event fires everytime the user selects an emoji in the picker, \n                        and its parameter is the emoji in its Unicode format.\n                    ")])]),o("tr",[o("td",[t._v("emojiImgAdded")]),o("td",[t._v("emojiImgTag")]),o("td",{staticClass:"table-description"},[t._v("\n                        This event fires everytime the user selects an emoji in the picker, \n                        and its parameter is the emoji HTML IMG tag.\n                    ")])])])])},function(){var t=this,e=t.$createElement,o=t._self._c||e;return o("table",{staticClass:"row col-12 table"},[o("thead",[o("tr",[o("th",[t._v("Attribute")]),o("th",[t._v("Type")]),o("th",[t._v("Valid Values")]),o("th",[t._v("Description")])])]),o("tbody",[o("tr",[o("td",[t._v("pickerWidth")]),o("td",[t._v("Number")]),o("td",[t._v("Any Number")]),o("td",{staticClass:"table-description"},[t._v("\n                        Define the emoji picker width (in pixels).\n                        Default: '250'.\n                    ")])]),o("tr",[o("td",[t._v("pickerMaxHeight")]),o("td",[t._v("Number")]),o("td",[t._v("Any Number")]),o("td",{staticClass:"table-description"},[t._v("\n                        Define the emoji picker max height (in pixels).\n                        Default: '200'.\n                    ")])]),o("tr",[o("td",[t._v("appendToBody")]),o("td",[t._v("Boolean")]),o("td",[t._v("True / False")]),o("td",{staticClass:"table-description"},[t._v("\n                        Define the emoji picker bind to body if true; or to parent element if false.\n                        Default: false.\n                    ")])]),o("tr",[o("td",[t._v("triggerType")]),o("td",[t._v("Number")]),o("td",[t._v("'click' and 'hover'")]),o("td",{staticClass:"table-description"},[t._v("\n                        Define the emoji picker trigger type.\n                        Default: 'click'.\n                    ")])]),o("tr",[o("td",[t._v("emojiData")]),o("td",[t._v("Array")]),o("td",[t._v("Array with the Specified Structure")]),o("td",{staticClass:"table-description"},[t._v("\n                        This is the array of emojis which is supplied by \n                        this library, like exemplified in Emoji Data Index. \n                        Default: [].\n                    ")])]),o("tr",[o("td",[t._v("emojiGroups")]),o("td",[t._v("Array")]),o("td",[t._v("Array with the Specified Structure")]),o("td",{staticClass:"table-description"},[t._v("\n                        This is the array of emoji groups which is supplied by \n                        this library, like exemplified in Emoji Data Index. Default: [].\n                    ")])]),o("tr",[o("td",[t._v("skinsSelection")]),o("td",[t._v("Boolean")]),o("td",[t._v("true / false")]),o("td",{staticClass:"table-description"},[t._v("\n                        This is a boolean to enable or disable skins selection in the emoji picker. Default: false.\n                    ")])]),o("tr",[o("td",[t._v("recentEmojisFeat")]),o("td",[t._v("Boolean")]),o("td",[t._v("true / false")]),o("td",{staticClass:"table-description"},[t._v("\n                        This is a boolean to enable or disable \n                        recent emojis feature in the emoji picker. Default: false.\n                    ")])]),o("tr",[o("td",[t._v("recentEmojisStorage")]),o("td",[t._v("String")]),o("td",[t._v("'local', 'session', 'none'")]),o("td",{staticClass:"table-description"},[t._v("\n                        Sets the type of storage for recent emojis in a browser.\n                        'local': LocalStorage; 'session': SessionStorage; 'none': Disable storage. \n                        Default: 'none'.\n                    ")])]),o("tr",[o("td",[t._v("recentEmojiStorageName")]),o("td",[t._v("String")]),o("td",[t._v("Any String")]),o("td",{staticClass:"table-description"},[t._v("\n                        Sets the name of the browser storage object, if enabled. \n                        Default: 'cep-recent-emojis'.\n                    ")])]),o("tr",[o("td",[t._v("recentEmojiLimit")]),o("td",[t._v("Number")]),o("td",[t._v("Any Number")]),o("td",{staticClass:"table-description"},[t._v("\n                        Sets the maximum amount of recent emojis.\n                        Default: 12.\n                    ")])]),o("tr",[o("td",[t._v("searchEmojisFeat")]),o("td",[t._v("Boolean")]),o("td",[t._v("true / false")]),o("td",{staticClass:"table-description"},[t._v("\n                        This is a boolean to enable or disable \n                        search emojis feature in the emoji picker. Default: false.\n                    ")])]),o("tr",[o("td",[t._v("searchEmojiPlaceholder")]),o("td",[t._v("String")]),o("td",[t._v("Any String")]),o("td",{staticClass:"table-description"},[t._v("\n                        Define the search input placeholder. \n                        Default: 'Search emojis.'.\n                    ")])]),o("tr",[o("td",[t._v("searchEmojiNotFound")]),o("td",[t._v("String")]),o("td",[t._v("Any String")]),o("td",{staticClass:"table-description"},[t._v("\n                        Define the label when there are no emojis found.\n                        Default: 'No emojis found.'.\n                    ")])]),o("tr",[o("td",[t._v("twemojiPath")]),o("td",[t._v("String")]),o("td",[t._v("Any String URL")]),o("td",{staticClass:"table-description"},[t._v("\n                        This is a variable to define where are stored the  \n                        emoji arts static resources. Default: 'https://twemoji.maxcdn.com/2/'.\n                    ")])]),o("tr",[o("td",[t._v("twemojiExtension")]),o("td",[t._v("String")]),o("td",[t._v("'.png', '.svg', '.jpg', '.jpeg', '.ico'")]),o("td",{staticClass:"table-description"},[t._v("\n                        This is a variable to define emoji arts static resources extension. \n                        Note: This property only changes the extension, the filename will always be the codepoint for the emoji Unicode.\n                        Default: '.png'.\n                    ")])]),o("tr",[o("td",[t._v("twemojiFolder")]),o("td",[t._v("String")]),o("td",[t._v("Any String folder name")]),o("td",{staticClass:"table-description"},[t._v("\n                        This is a variable to define the folder \n                        where are stored the emoji arts static resources in the 'twemojiPath'.\n                        Default: '72x72'.\n                    ")])]),o("tr",[o("td",[t._v("-")]),o("td",[t._v("-")]),o("td",[t._v("-")]),o("td",[t._v("-")])]),o("tr",[o("td",[t._v("content")]),o("td",[t._v("String")]),o("td",[t._v("Any String Variable")]),o("td",{staticClass:"table-description"},[t._v("\n                        This is the content variable which \n                        will be the output of the textarea with the emoji art IMG tags\n                        converted to its correspondent Unicode.\n                    ")])]),o("tr",[o("td",[t._v("enableSendBtn")]),o("td",[t._v("Boolean")]),o("td",[t._v("true / false")]),o("td",{staticClass:"table-description"},[t._v("\n                        This is a boolean to enable or \n                        disable the send button. Default: false.\n                    ")])]),o("tr",[o("td",[t._v("disableEmojiPicker")]),o("td",[t._v("Boolean")]),o("td",[t._v("true / false")]),o("td",{staticClass:"table-description"},[t._v("\n                        Disable the emoji-picker.\n                        Default: false.\n                    ")])]),o("tr",[o("td",[t._v("disabled")]),o("td",[t._v("Boolean")]),o("td",[t._v("true / false")]),o("td",{staticClass:"table-description"},[t._v("\n                        Disable the textarea and the emoji-picker.\n                        Default: false.\n                    ")])]),o("tr",[o("td",[t._v("componentColor")]),o("td",[t._v("String")]),o("td",[t._v("'cream', 'cherry', 'forest', 'ocean', 'sun', 'transparent'")]),o("td",{staticClass:"table-description"},[t._v("\n                        This is a variable to define the component color. Default: 'cream'.\n                    ")])])])])},function(){var t=this,e=t.$createElement,o=t._self._c||e;return o("table",{staticClass:"row col-12 table"},[o("thead",[o("tr",[o("th",[t._v("Event")]),o("th",[t._v("Parameter")]),o("th",[t._v("Description")])])]),o("tbody",[o("tr",[o("td",[t._v("contentChanged")]),o("td",[t._v("None")]),o("td",{staticClass:"table-description"},[t._v("\n                        This event fires everytime the textarea content is updated.\n                    ")])]),o("tr",[o("td",[t._v("enterKey")]),o("td",[t._v("None")]),o("td",{staticClass:"table-description"},[t._v("\n                        This event fires everytime the enter key is pressed or the send button is clicked, \n                        so that you can define what action is to be performed.\n                    ")])]),o("tr",[o("td",[t._v("emojiUnicodeAdded")]),o("td",[t._v("emojiUnicode")]),o("td",{staticClass:"table-description"},[t._v("\n                        This event fires everytime the user selects an emoji in the picker, \n                        and its parameter is the emoji in its Unicode format.\n                    ")])]),o("tr",[o("td",[t._v("emojiImgAdded")]),o("td",[t._v("emojiImgTag")]),o("td",{staticClass:"table-description"},[t._v("\n                        This event fires everytime the user selects an emoji in the picker, \n                        and its parameter is the emoji HTML IMG tag.\n                    ")])])])])},function(){var t=this,e=t.$createElement,o=t._self._c||e;return o("div",{staticClass:"container"},[t._v("\n            These are useful methods of the component \n            you can access if you define a ref attribute to your component. \n            The method can then be accessed on your Vue parent component with:\n            "),o("div",{staticClass:"code-block padding-all"},[t._v("\n                this.$refs.yourRefName.methodName\n            ")])])},function(){var t=this,e=t.$createElement,o=t._self._c||e;return o("table",{staticClass:"row col-12 table"},[o("thead",[o("tr",[o("th",[t._v("Method")]),o("th",[t._v("Parameter")]),o("th",[t._v("Description")])])]),o("tbody",[o("tr",[o("td",[t._v("addText(text)")]),o("td",[t._v("text - String")]),o("td",{staticClass:"table-description"},[t._v("\n                        This method adds a text to the textarea. The text parameter will \n                        then be sanitized and emojis Unicodes converted to emoji IMG \n                        arts from Twemoji.\n                    ")])]),o("tr",[o("td",[t._v("addTextBlur(text)")]),o("td",[t._v("text - String")]),o("td",{staticClass:"table-description"},[t._v("\n                        This method adds a text to the textarea. The text parameter will \n                        then be sanitized and emojis Unicodes converted to emoji IMG \n                        arts from Twemoji. It is the same as addText(text) method, \n                        but this one doesn't trigger smartphone keyboard.\n                    ")])]),o("tr",[o("td",[t._v("cleanText()")]),o("td",[t._v("None")]),o("td",{staticClass:"table-description"},[t._v("\n                        This method cleans the textarea.\n                    ")])])])])},function(){var t=this,e=t.$createElement,o=t._self._c||e;return o("div",{staticClass:"container margin-top"},[t._v("\n            This library execute some optimizations excluding unnecessary fields (for this component) in an already indexed list of Unicode \n            emojis from the lib "),o("a",{attrs:{href:"https://milesj.gitbook.io/emojibase"}},[t._v("'emojibase'")]),t._v(". Below you have info for each emoji bundle and \n            import paths ("),o("a",{attrs:{href:"#emoji-langs"}},[t._v("where {LANG} is your preferred language")]),t._v("):\n        ")])},function(){var t=this,e=t.$createElement,o=t._self._c||e;return o("table",{staticClass:"row col-12 table"},[o("thead",[o("tr",[o("th",[t._v("Bundle Import Path")]),o("th",[t._v("Size (aprox.)")]),o("th",[t._v("GZIP Size (aprox.)")])])]),o("tbody",[o("tr",[o("td",[t._v("'cool-emoji-picker/emoji-data/{LANG}/emoji-all-groups.json'")]),o("td",[t._v("129KB")]),o("td",[t._v("26KB")])]),o("tr",[o("td",[t._v("'cool-emoji-picker/emoji-data/{LANG}/emoji-group-smileys-emotion.json'")]),o("td",[t._v("9KB")]),o("td",[t._v("3KB")])]),o("tr",[o("td",[t._v("'cool-emoji-picker/emoji-data/{LANG}/emoji-group-people-body.json'")]),o("td",[t._v("57KB")]),o("td",[t._v("10KB")])]),o("tr",[o("td",[t._v("'cool-emoji-picker/emoji-data/{LANG}/emoji-group-symbols.json'")]),o("td",[t._v("14KB")]),o("td",[t._v("3KB")])]),o("tr",[o("td",[t._v("'cool-emoji-picker/emoji-data/{LANG}/emoji-group-travel-places.json'")]),o("td",[t._v("12KB")]),o("td",[t._v("3KB")])]),o("tr",[o("td",[t._v("'cool-emoji-picker/emoji-data/{LANG}/emoji-group-objects.json'")]),o("td",[t._v("12KB")]),o("td",[t._v("3KB")])]),o("tr",[o("td",[t._v("'cool-emoji-picker/emoji-data/{LANG}/emoji-group-flags.json'")]),o("td",[t._v("14KB")]),o("td",[t._v("2KB")])]),o("tr",[o("td",[t._v("'cool-emoji-picker/emoji-data/{LANG}/emoji-group-food-drink.json'")]),o("td",[t._v("7KB")]),o("td",[t._v("2KB")])]),o("tr",[o("td",[t._v("'cool-emoji-picker/emoji-data/{LANG}/emoji-group-animals-nature.json'")]),o("td",[t._v("7KB")]),o("td",[t._v("2KB")])]),o("tr",[o("td",[t._v("'cool-emoji-picker/emoji-data/{LANG}/emoji-group-activities.json'")]),o("td",[t._v("6KB")]),o("td",[t._v("2KB")])]),o("tr",[o("td",[t._v("'cool-emoji-picker/emoji-data/emoji-groups.json'")]),o("td",[t._v("700B")]),o("td",[t._v("460B")])])])])},function(){var t=this,e=t.$createElement,o=t._self._c||e;return o("div",{staticClass:"container"},[o("strong",{staticClass:"row col-12"},[t._v("- emoji-data/zh - Chinese (zh)")]),o("strong",{staticClass:"row col-12"},[t._v("- emoji-data/zh-hant - Chinese, Traditional (zh-hant)")]),o("strong",{staticClass:"row col-12"},[t._v("- emoji-data/da - Danish (da)")]),o("strong",{staticClass:"row col-12"},[t._v("- emoji-data/nl - Dutch (nl)")]),o("strong",{staticClass:"row col-12"},[t._v("- emoji-data/en - English (en)")]),o("strong",{staticClass:"row col-12"},[t._v("- emoji-data/en-gb - English, Great Britain (en-gb)")]),o("strong",{staticClass:"row col-12"},[t._v("- emoji-data/fr - French (fr)")]),o("strong",{staticClass:"row col-12"},[t._v("- emoji-data/de - German (de)")]),o("strong",{staticClass:"row col-12"},[t._v("- emoji-data/it - Italian (it)")]),o("strong",{staticClass:"row col-12"},[t._v("- emoji-data/ja - Japanese (ja)")]),o("strong",{staticClass:"row col-12"},[t._v("- emoji-data/ko - Korean (ko)")]),o("strong",{staticClass:"row col-12"},[t._v("- emoji-data/ms - Malay (ms)")]),o("strong",{staticClass:"row col-12"},[t._v("- emoji-data/pl - Polish (pl)")]),o("strong",{staticClass:"row col-12"},[t._v("- emoji-data/pt - Portuguese (pt)")]),o("strong",{staticClass:"row col-12"},[t._v("- emoji-data/ru - Russian (ru)")]),o("strong",{staticClass:"row col-12"},[t._v("- emoji-data/es - Spanish (es)")]),o("strong",{staticClass:"row col-12"},[t._v("- emoji-data/es-mx - Spanish, Mexico (es-mx)")]),o("strong",{staticClass:"row col-12"},[t._v("- emoji-data/sv - Swedish (sv)")]),o("strong",{staticClass:"row col-12"},[t._v("- emoji-data/th - Thai (th)")])])},function(){var t=this,e=t.$createElement,o=t._self._c||e;return o("div",{staticClass:"container margin-bottom"},[t._v("\n            - Thanks to "),o("a",{attrs:{href:"https://twitter.com/"}},[t._v("Twitter")]),t._v(" for the emoji arts used in this component from their lib \n            "),o("a",{attrs:{href:"https://github.com/twitter/twemoji"}},[t._v("Twemoji")]),t._v(".\n        ")])},function(){var t=this,e=t.$createElement,o=t._self._c||e;return o("div",{staticClass:"container margin-bottom"},[t._v("\n            - Thanks to "),o("a",{attrs:{href:"https://milesj.gitbook.io/emojibase"}},[t._v("Emojibase")]),t._v(" for their JSON emoji list builded with base on latest Unicode.\n        ")])},function(){var t=this,e=t.$createElement,o=t._self._c||e;return o("div",{staticClass:"margin-bottom text-center container"},[t._v("\n            Any suggestion or bug please report at "),o("a",{attrs:{href:"https://github.com/kevinfaguiar/cool-emoji-picker/issues"}},[t._v("Issues")])])}],r=o("7dbd"),s=o("d825"),c=o("8dd8"),l=o("d0b6"),d=o("ed21"),m=o("3c8b"),p=o("0da2"),v=o("4286"),h=o("732f"),u=o("50c2"),_=o("c50e"),f=o("f27f"),j=o("db0f"),g={name:"App",components:{cooltextarea:r["b"],coolpicker:r["a"],slide:j["Slide"]},data:function(){return{content:"",isSlideOpen:!1}},computed:{emojiDataAll:function(){return s},emojiDataOneCollection:function(){var t=[];return t.push(m),t},emojiDataTwoCollections:function(){var t=[];return t.push(c),t.push(h),t},emojiDataThreeCollections:function(){var t=[];return t.push(h),t.push(l),t.push(p),t},emojiDataFourCollections:function(){var t=[];return t.push(p),t.push(v),t.push(d),t.push(m),t},emojiGroups:function(){return u}},methods:{createElementFromHTML:function(t){var e=document.createElement("div");return e.innerHTML=t.trim(),e.firstChild},onEnterKey:function(){if(0!==this.content.length){var t=document.getElementById("messages-sent"),e=f["a"].escapeHTML(this.content);e=_["a"].getEmojiImgFromUnicode(e),t.appendChild(this.createElementFromHTML('<div class="code-block-cream text-wrap margin-bottom padding-all text-break">'+e+"</div>")),t.childElementCount>6&&t.removeChild(t.childNodes[1]),this.$refs.cooltextareaSend.cleanText()}}}},b=g,C=(o("4cea"),o("2877")),w=Object(C["a"])(b,a,n,!1,null,null,null),x=w.exports;new i["a"]({render:function(t){return t(x)}}).$mount("#app")},a998:function(t,e,o){e=t.exports=o("2350")(!1),e.i(o("316c"),""),e.push([t.i,"@import url(https://fonts.googleapis.com/css?family=Roboto);",""]),e.push([t.i,"body{background-color:#fafafa}a{text-decoration:none;color:#05adad}a:hover{color:teal}.slide-fixed>div>.bm-burger-button{position:fixed!important;top:15px!important;left:15px!important;background-color:#fff;z-index:9998}.slide-fixed>div>#sideNav{z-index:9999}.doc-index-lvl1{color:#fafafa!important;font-size:20px;font-weight:700}.doc-index-lvl1:hover{color:#cacaca!important}.doc-index-lvl2{color:#fafafa;font-size:18px;font-weight:700;margin-top:5px;margin-bottom:5px;margin-left:15px}.doc-index-lvl2:hover{color:#cacaca!important}.app{border-radius:25px;margin-top:20px;margin-bottom:20px}.text-wrap{white-space:pre-wrap}.text-break{word-break:break-word}.roboto-font{font-family:Roboto,sans-serif}.margin-header{margin-top:80px}.margin-top{margin-top:20px}.margin-bottom{margin-bottom:20px}.border-bottom{border-bottom:1px solid #cacaca}.padding-all{padding:5px}.header1{font-size:25px;border-bottom:1px solid #cacaca}.header1,.header2{font-weight:700;text-align:center}.header2{font-size:15px}.table{margin:10px;padding-left:15px;padding-right:15px}.table>thead{font-size:18px;background-color:#cacaca}.table>tbody{font-size:14px;text-align:center}.table>tbody>tr>td{border:1px solid #cacaca}.table-description{max-width:200px}.code-block{background-color:#404040;color:#fafafa}.code-block,.code-block-cream{padding-top:10px;padding-bottom:10px;border-radius:10px}.code-block-cream{background-color:#ece7e7;color:#404040}.text-center{text-align:center}.text-justify{text-align:justify}.b-rounded{border-radius:25px}",""])}});